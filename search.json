[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Lesser General Public License","title":"GNU Lesser General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed. version GNU Lesser General Public License incorporates terms conditions version 3 GNU General Public License, supplemented additional permissions listed .","code":""},{"path":"/LICENSE.html","id":"id_0-additional-definitions","dir":"","previous_headings":"","what":"0. Additional Definitions","title":"GNU Lesser General Public License","text":"used herein, “License” refers version 3 GNU Lesser General Public License, “GNU GPL” refers version 3 GNU General Public License. “Library” refers covered work governed License, Application Combined Work defined . “Application” work makes use interface provided Library, otherwise based Library. Defining subclass class defined Library deemed mode using interface provided Library. “Combined Work” work produced combining linking Application Library. particular version Library Combined Work made also called “Linked Version”. “Minimal Corresponding Source” Combined Work means Corresponding Source Combined Work, excluding source code portions Combined Work , considered isolation, based Application, Linked Version. “Corresponding Application Code” Combined Work means object code /source code Application, including data utility programs needed reproducing Combined Work Application, excluding System Libraries Combined Work.","code":""},{"path":"/LICENSE.html","id":"id_1-exception-to-section-3-of-the-gnu-gpl","dir":"","previous_headings":"","what":"1. Exception to Section 3 of the GNU GPL","title":"GNU Lesser General Public License","text":"may convey covered work sections 3 4 License without bound section 3 GNU GPL.","code":""},{"path":"/LICENSE.html","id":"id_2-conveying-modified-versions","dir":"","previous_headings":"","what":"2. Conveying Modified Versions","title":"GNU Lesser General Public License","text":"modify copy Library, , modifications, facility refers function data supplied Application uses facility (argument passed facility invoked), may convey copy modified version: ) License, provided make good faith effort ensure , event Application supply function data, facility still operates, performs whatever part purpose remains meaningful, b) GNU GPL, none additional permissions License applicable copy.","code":""},{"path":"/LICENSE.html","id":"id_3-object-code-incorporating-material-from-library-header-files","dir":"","previous_headings":"","what":"3. Object Code Incorporating Material from Library Header Files","title":"GNU Lesser General Public License","text":"object code form Application may incorporate material header file part Library. may convey object code terms choice, provided , incorporated material limited numerical parameters, data structure layouts accessors, small macros, inline functions templates (ten fewer lines length), following: ) Give prominent notice copy object code Library used Library use covered License. b) Accompany object code copy GNU GPL license document.","code":""},{"path":"/LICENSE.html","id":"id_4-combined-works","dir":"","previous_headings":"","what":"4. Combined Works","title":"GNU Lesser General Public License","text":"may convey Combined Work terms choice , taken together, effectively restrict modification portions Library contained Combined Work reverse engineering debugging modifications, also following: ) Give prominent notice copy Combined Work Library used Library use covered License. b) Accompany Combined Work copy GNU GPL license document. c) Combined Work displays copyright notices execution, include copyright notice Library among notices, well reference directing user copies GNU GPL license document. d) one following: 0) Convey Minimal Corresponding Source terms License, Corresponding Application Code form suitable , terms permit, user recombine relink Application modified version Linked Version produce modified Combined Work, manner specified section 6 GNU GPL conveying Corresponding Source. 1) Use suitable shared library mechanism linking Library. suitable mechanism one () uses run time copy Library already present user’s computer system, (b) operate properly modified version Library interface-compatible Linked Version. e) Provide Installation Information, otherwise required provide information section 6 GNU GPL, extent information necessary install execute modified version Combined Work produced recombining relinking Application modified version Linked Version. (use option 4d0, Installation Information must accompany Minimal Corresponding Source Corresponding Application Code. use option 4d1, must provide Installation Information manner specified section 6 GNU GPL conveying Corresponding Source.)","code":""},{"path":"/LICENSE.html","id":"id_5-combined-libraries","dir":"","previous_headings":"","what":"5. Combined Libraries","title":"GNU Lesser General Public License","text":"may place library facilities work based Library side side single library together library facilities Applications covered License, convey combined library terms choice, following: ) Accompany combined library copy work based Library, uncombined library facilities, conveyed terms License. b) Give prominent notice combined library part work based Library, explaining find accompanying uncombined form work.","code":""},{"path":"/LICENSE.html","id":"id_6-revised-versions-of-the-gnu-lesser-general-public-license","dir":"","previous_headings":"","what":"6. Revised Versions of the GNU Lesser General Public License","title":"GNU Lesser General Public License","text":"Free Software Foundation may publish revised /new versions GNU Lesser General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Library received specifies certain numbered version GNU Lesser General Public License “later version” applies , option following terms conditions either published version later version published Free Software Foundation. Library received specify version number GNU Lesser General Public License, may choose version GNU Lesser General Public License ever published Free Software Foundation. Library received specifies proxy can decide whether future versions GNU Lesser General Public License shall apply, proxy’s public statement acceptance version permanent authorization choose version Library.","code":""},{"path":"/articles/main-functions-demo.html","id":"trisk-analysis-main-functions-demo","dir":"Articles","previous_headings":"","what":"trisk.analysis main functions demo","title":"main-functions-demo","text":"vignette demonstrates use trisk.model package download input data, run TRISK models, perform sensitivity analysis. walks process running model, inspecting outputs, using filters detailed analyses.","code":""},{"path":"/articles/main-functions-demo.html","id":"download-trisk-input-data","dir":"Articles","previous_headings":"trisk.analysis main functions demo","what":"Download TRISK Input Data","title":"main-functions-demo","text":"TRISK model requires specific input datasets. section, download datasets defined endpoint store local directory.","code":"# Define the endpoint URL and S3 path for downloading data endpoint_url <- \"https://crispy-datamodels-bucket.fra1.cdn.digitaloceanspaces.com\" s3_path <- \"crispy-datamodels-bucket/trisk_V2/csv\" local_trisk_inputs_folder <- file.path(\"..\",\"data-raw\", \"data\", \"trisk_inputs\")  # Download TRISK input data download_trisk_inputs(endpoint_url, s3_path, local_trisk_inputs_folder) #> Download completed."},{"path":"/articles/main-functions-demo.html","id":"run-a-simple-trisk-model","dir":"Articles","previous_headings":"trisk.analysis main functions demo","what":"Run a Simple TRISK Model","title":"main-functions-demo","text":"Next, demonstrate simple TRISK model run using baseline target scenario. also measure time taken execution.","code":"# Set output path for TRISK results trisk_output_path <- file.path(\"..\",\"data-raw\", \"data\", \"trisk_outputs\")  # Measure execution time start_time <- Sys.time()  # Run TRISK model with baseline and target scenarios run_trisk(   input_path = local_trisk_inputs_folder,   output_path = trisk_output_path,   baseline_scenario = \"Steel_baseline\",   target_scenario = \"Steel_NZ\",   scenario_geography = \"Global\" ) #> -- Processing Assets and Scenarios.  #> -- Transforming to Trisk model input.  #> -- Calculating baseline, target, and shock trajectories.  #> -- Calculating net profits.  #> -- Calculating market risk.  #> -- Calculating credit risk.  #> Removed 950 rows when checking for compatibility with merton model.  #> [1] \"Outputs saved in folder: ../data-raw/data/trisk_outputs/20240925_195845__72828734-7719-47cb-b465-37b78b6df0d5\"  # End time end_time <- Sys.time()  # Calculate time taken for execution time_taken <- end_time - start_time print(time_taken) #> Time difference of 2.88232 secs"},{"path":"/articles/main-functions-demo.html","id":"view-latest-trisk-results","dir":"Articles","previous_headings":"trisk.analysis main functions demo","what":"View Latest TRISK Results","title":"main-functions-demo","text":"model run, can inspect results. TRISK results can include various metrics NPV, PD, trajectories, parameters.","code":"# Print the latest TRISK results for different result types print(get_latest_trisk_result(trisk_output_path = trisk_output_path, result_type = \"npv\")) #> Rows: 777 Columns: 19 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (11): run_id, company_id, asset_id, company_name, asset_name, sector, te... #> dbl  (8): net_present_value_baseline, net_present_value_shock, risk_free_rat... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> # A tibble: 777 × 19 #>    run_id          company_id asset_id company_name asset_name sector technology #>    <chr>           <chr>      <chr>    <chr>        <chr>      <chr>  <chr>      #>  1 72828734-7719-… E10000000… P100000… Kobe Steel … Kobe Kako… Steel  BOF-BF     #>  2 72828734-7719-… E10000000… P100000… Nippon Stee… Nippon Ea… Steel  BOF-BF     #>  3 72828734-7719-… E10000000… P100000… Nippon Stee… North Nip… Steel  BOF-BF     #>  4 72828734-7719-… E10000000… P100000… Nippon Stee… Nippon Ea… Steel  BOF-BF     #>  5 72828734-7719-… E10000000… P100000… Nippon Stee… Nippon Ky… Steel  BOF-BF     #>  6 72828734-7719-… E10000000… P100000… Nippon Stee… Nippon Ky… Steel  BOF-BF     #>  7 72828734-7719-… E10000000… P100000… Nippon Stee… Nippon Ea… Steel  BOF-BF     #>  8 72828734-7719-… E10000000… P100000… Nippon Stee… Nippon Ka… Steel  BOF-BF     #>  9 72828734-7719-… E10000000… P100000… ArcelorMitt… ArcelorMi… Steel  BOF-BF     #> 10 72828734-7719-… E10000000… P100000… ArcelorMitt… ArcelorMi… Steel  EAF-MM     #> # ℹ 767 more rows #> # ℹ 12 more variables: net_present_value_baseline <dbl>, #> #   net_present_value_shock <dbl>, baseline_scenario <chr>, #> #   target_scenario <chr>, scenario_geography <chr>, carbon_price_model <chr>, #> #   risk_free_rate <dbl>, discount_rate <dbl>, growth_rate <dbl>, #> #   div_netprofit_prop_coef <dbl>, shock_year <dbl>, market_passthrough <dbl> print(get_latest_trisk_result(trisk_output_path = trisk_output_path, result_type = \"pd\")) #> Rows: 2915 Columns: 17 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (8): run_id, company_id, company_name, sector, baseline_scenario, target... #> dbl (9): term, pd_baseline, pd_shock, risk_free_rate, discount_rate, growth_... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> # A tibble: 2,915 × 17 #>    run_id              company_id company_name sector  term pd_baseline pd_shock #>    <chr>               <chr>      <chr>        <chr>  <dbl>       <dbl>    <dbl> #>  1 72828734-7719-47cb… E10000000… Kobe Steel … Steel      1    4.53e-12  0.00456 #>  2 72828734-7719-47cb… E10000000… Kobe Steel … Steel      2    1.03e- 6  0.0385  #>  3 72828734-7719-47cb… E10000000… Kobe Steel … Steel      3    6.81e- 5  0.0834  #>  4 72828734-7719-47cb… E10000000… Kobe Steel … Steel      4    5.75e- 4  0.126   #>  5 72828734-7719-47cb… E10000000… Kobe Steel … Steel      5    2.12e- 3  0.165   #>  6 72828734-7719-47cb… E10000000… Nippon Stee… Steel      1    1.41e-11  0.0116  #>  7 72828734-7719-47cb… E10000000… Nippon Stee… Steel      2    1.87e- 6  0.0638  #>  8 72828734-7719-47cb… E10000000… Nippon Stee… Steel      3    1.03e- 4  0.119   #>  9 72828734-7719-47cb… E10000000… Nippon Stee… Steel      4    7.97e- 4  0.168   #> 10 72828734-7719-47cb… E10000000… Nippon Stee… Steel      5    2.78e- 3  0.209   #> # ℹ 2,905 more rows #> # ℹ 10 more variables: baseline_scenario <chr>, target_scenario <chr>, #> #   scenario_geography <chr>, carbon_price_model <chr>, risk_free_rate <dbl>, #> #   discount_rate <dbl>, growth_rate <dbl>, div_netprofit_prop_coef <dbl>, #> #   shock_year <dbl>, market_passthrough <dbl> print(get_latest_trisk_result(trisk_output_path = trisk_output_path, result_type = \"trajectories\")) #> Rows: 30848 Columns: 32 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (11): run_id, asset_id, asset_name, company_id, company_name, sector, te... #> dbl (21): year, production_plan_company_technology, production_baseline_scen... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> # A tibble: 30,848 × 32 #>    run_id    asset_id asset_name company_id company_name  year sector technology #>    <chr>     <chr>    <chr>      <chr>      <chr>        <dbl> <chr>  <chr>      #>  1 72828734… GASTAGO… NA         100748a83… NA            2020 Steel  EAF-BF     #>  2 72828734… GASTAGO… NA         100748a83… NA            2021 Steel  EAF-BF     #>  3 72828734… GASTAGO… NA         100748a83… NA            2022 Steel  EAF-BF     #>  4 72828734… GASTAGO… NA         100748a83… NA            2023 Steel  EAF-BF     #>  5 72828734… GASTAGO… NA         100748a83… NA            2024 Steel  EAF-BF     #>  6 72828734… GASTAGO… NA         100748a83… NA            2025 Steel  EAF-BF     #>  7 72828734… GASTAGO… NA         100748a83… NA            2026 Steel  EAF-BF     #>  8 72828734… GASTAGO… NA         100748a83… NA            2027 Steel  EAF-BF     #>  9 72828734… GASTAGO… NA         100748a83… NA            2028 Steel  EAF-BF     #> 10 72828734… GASTAGO… NA         100748a83… NA            2029 Steel  EAF-BF     #> # ℹ 30,838 more rows #> # ℹ 24 more variables: production_plan_company_technology <dbl>, #> #   production_baseline_scenario <dbl>, production_target_scenario <dbl>, #> #   production_shock_scenario <dbl>, pd <dbl>, net_profit_margin <dbl>, #> #   debt_equity_ratio <dbl>, volatility <dbl>, scenario_price_baseline <dbl>, #> #   price_shock_scenario <dbl>, net_profits_baseline_scenario <dbl>, #> #   net_profits_shock_scenario <dbl>, … print(get_latest_trisk_result(trisk_output_path = trisk_output_path, result_type = \"params\")) #> Rows: 1 Columns: 11 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (5): baseline_scenario, target_scenario, scenario_geography, carbon_pric... #> dbl (6): risk_free_rate, discount_rate, growth_rate, div_netprofit_prop_coef... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> # A tibble: 1 × 11 #>   baseline_scenario target_scenario scenario_geography carbon_price_model #>   <chr>             <chr>           <chr>              <chr>              #> 1 Steel_baseline    Steel_NZ        Global             no_carbon_tax      #> # ℹ 7 more variables: risk_free_rate <dbl>, discount_rate <dbl>, #> #   growth_rate <dbl>, div_netprofit_prop_coef <dbl>, shock_year <dbl>, #> #   market_passthrough <dbl>, run_id <chr>"},{"path":"/articles/main-functions-demo.html","id":"run-a-filtered-trisk-model-optional","dir":"Articles","previous_headings":"trisk.analysis main functions demo","what":"Run a Filtered TRISK Model (Optional)","title":"main-functions-demo","text":"can also run TRISK model filtered subset assets. example filters dataset country, sector, technology.","code":"# Run the TRISK model with a smaller filtered dataset (currently unused) single_filtered_results <- run_trisk_single_filtered(   input_path = local_trisk_inputs_folder,   run_params = list(     scenario_geography = \"Global\",     baseline_scenario = \"Steel_baseline\",     target_scenario = \"Steel_NZ\",     shock_year = 2030   ),   country_iso2 = c(\"US\", \"AR\"),   sector = \"Steel\",   technology = c(\"EAF-DRI\", \"BOF-BF\"),   company_name = NULL ) #> -- Processing Assets and Scenarios.  #> -- Transforming to Trisk model input.  #> -- Calculating baseline, target, and shock trajectories.  #> -- Calculating net profits.  #> -- Calculating market risk.  #> -- Calculating credit risk.  #> Removed 30 rows when checking for compatibility with merton model.  # Print the filtered TRISK results for different result types print(single_filtered_results[\"npv\"]) #> $npv #> # A tibble: 15 × 9 #>    run_id          company_id asset_id company_name asset_name sector technology #>    <chr>           <chr>      <chr>    <chr>        <chr>      <chr>  <chr>      #>  1 c4c34dfd-d591-… E10000000… P100000… ArcelorMitt… ArcelorMi… Steel  EAF-DRI    #>  2 c4c34dfd-d591-… E10000000… P100000… United Stat… U.S. Stee… Steel  BOF-BF     #>  3 c4c34dfd-d591-… E10000000… P100000… United Stat… U.S. Stee… Steel  BOF-BF     #>  4 c4c34dfd-d591-… E10000000… P100000… Siderca SAI… TenarisSi… Steel  EAF-DRI    #>  5 c4c34dfd-d591-… E10000013… P100000… Ternium Arg… Ternium S… Steel  BOF-BF     #>  6 c4c34dfd-d591-… E10000100… P100000… Cleveland-C… Cleveland… Steel  BOF-BF     #>  7 c4c34dfd-d591-… E10000100… P100000… Cleveland-C… Cleveland… Steel  BOF-BF     #>  8 c4c34dfd-d591-… E10000100… P100000… Cleveland-C… Cleveland… Steel  BOF-BF     #>  9 c4c34dfd-d591-… E10000100… P100000… Cleveland-C… Cleveland… Steel  BOF-BF     #> 10 c4c34dfd-d591-… E10000100… P100000… Cleveland-C… Cleveland… Steel  BOF-BF     #> 11 c4c34dfd-d591-… E10000100… P100000… Cleveland-C… Cleveland… Steel  BOF-BF     #> 12 c4c34dfd-d591-… E10000100… P100000… Cleveland-C… Cleveland… Steel  EAF-DRI    #> 13 c4c34dfd-d591-… E10000101… P100000… Acindar Ind… ArcelorMi… Steel  EAF-DRI    #> 14 c4c34dfd-d591-… E10000101… P100000… Nucor Steel… Nucor Ste… Steel  EAF-DRI    #> 15 c4c34dfd-d591-… E10000101… P100000… Steel Dynam… Steel Dyn… Steel  EAF-DRI    #> # ℹ 2 more variables: net_present_value_baseline <dbl>, #> #   net_present_value_shock <dbl> print(single_filtered_results[\"pd\"]) #> $pd #> # A tibble: 25 × 7 #>    run_id              company_id company_name sector  term pd_baseline pd_shock #>    <chr>               <chr>      <chr>        <chr>  <int>       <dbl>    <dbl> #>  1 c4c34dfd-d591-4a89… E10000000… United Stat… Steel      1    1.41e-11  0.110   #>  2 c4c34dfd-d591-4a89… E10000000… United Stat… Steel      2    1.87e- 6  0.216   #>  3 c4c34dfd-d591-4a89… E10000000… United Stat… Steel      3    1.03e- 4  0.282   #>  4 c4c34dfd-d591-4a89… E10000000… United Stat… Steel      4    7.97e- 4  0.329   #>  5 c4c34dfd-d591-4a89… E10000000… United Stat… Steel      5    2.78e- 3  0.365   #>  6 c4c34dfd-d591-4a89… E10000000… Siderca SAI… Steel      1    3.57e-12  0.00173 #>  7 c4c34dfd-d591-4a89… E10000000… Siderca SAI… Steel      2    9.12e- 7  0.0231  #>  8 c4c34dfd-d591-4a89… E10000000… Siderca SAI… Steel      3    6.27e- 5  0.0587  #>  9 c4c34dfd-d591-4a89… E10000000… Siderca SAI… Steel      4    5.41e- 4  0.0962  #> 10 c4c34dfd-d591-4a89… E10000000… Siderca SAI… Steel      5    2.01e- 3  0.132   #> # ℹ 15 more rows print(single_filtered_results[\"trajectories\"]) #> $trajectories #> # A tibble: 800 × 22 #>    run_id    asset_id asset_name company_id company_name  year sector technology #>    <chr>     <chr>    <chr>      <chr>      <chr>        <dbl> <chr>  <chr>      #>  1 c4c34dfd… GASTUSA… NA         d6ca6f482… NA            2020 Steel  BOF-BF     #>  2 c4c34dfd… GASTUSA… NA         d6ca6f482… NA            2021 Steel  BOF-BF     #>  3 c4c34dfd… GASTUSA… NA         d6ca6f482… NA            2022 Steel  BOF-BF     #>  4 c4c34dfd… GASTUSA… NA         d6ca6f482… NA            2023 Steel  BOF-BF     #>  5 c4c34dfd… GASTUSA… NA         d6ca6f482… NA            2024 Steel  BOF-BF     #>  6 c4c34dfd… GASTUSA… NA         d6ca6f482… NA            2025 Steel  BOF-BF     #>  7 c4c34dfd… GASTUSA… NA         d6ca6f482… NA            2026 Steel  BOF-BF     #>  8 c4c34dfd… GASTUSA… NA         d6ca6f482… NA            2027 Steel  BOF-BF     #>  9 c4c34dfd… GASTUSA… NA         d6ca6f482… NA            2028 Steel  BOF-BF     #> 10 c4c34dfd… GASTUSA… NA         d6ca6f482… NA            2029 Steel  BOF-BF     #> # ℹ 790 more rows #> # ℹ 14 more variables: production_plan_company_technology <dbl>, #> #   production_baseline_scenario <dbl>, production_target_scenario <dbl>, #> #   production_shock_scenario <dbl>, pd <dbl>, net_profit_margin <dbl>, #> #   debt_equity_ratio <dbl>, volatility <dbl>, scenario_price_baseline <dbl>, #> #   price_shock_scenario <dbl>, net_profits_baseline_scenario <dbl>, #> #   net_profits_shock_scenario <dbl>, … print(single_filtered_results[\"params\"]) #> $params #> # A tibble: 1 × 11 #>   baseline_scenario target_scenario scenario_geography carbon_price_model #>   <chr>             <chr>           <chr>              <chr>              #> 1 \"\"                \"\"              Global             no_carbon_tax      #> # ℹ 7 more variables: risk_free_rate <dbl>, discount_rate <dbl>, #> #   growth_rate <dbl>, div_netprofit_prop_coef <dbl>, shock_year <dbl>, #> #   market_passthrough <dbl>, run_id <chr>"},{"path":"/articles/main-functions-demo.html","id":"sensitivity-analysis","dir":"Articles","previous_headings":"trisk.analysis main functions demo","what":"Sensitivity Analysis","title":"main-functions-demo","text":"Sensitivity analysis allows us explore changes parameters affect results. example, vary shock year multiple TRISK runs.","code":"# Define run parameters for sensitivity analysis run_params <- list(   list(     scenario_geography = \"Global\",     baseline_scenario = \"Steel_baseline\",     target_scenario = \"Steel_NZ\",     shock_year = 2030   ),   list(     scenario_geography = \"Global\",     baseline_scenario = \"Steel_baseline\",     target_scenario = \"Steel_NZ\",     shock_year = 2025   ) )  # Run sensitivity analysis across multiple TRISK runs sensitivity_analysis_results <- run_trisk_sa(   input_path = local_trisk_inputs_folder,   run_params = run_params ) #> [1] \"Starting the execution of 2 total runs\" #> -- Processing Assets and Scenarios.  #> -- Transforming to Trisk model input.  #> -- Calculating baseline, target, and shock trajectories.  #> -- Calculating net profits.  #> -- Calculating market risk.  #> -- Calculating credit risk.  #> Removed 950 rows when checking for compatibility with merton model.  #> [1] \"Done 1 / 2 total runs\" #> -- Processing Assets and Scenarios.  #> -- Transforming to Trisk model input.  #> -- Calculating baseline, target, and shock trajectories.  #> -- Calculating net profits.  #> -- Calculating market risk.  #> -- Calculating credit risk.  #> Removed 590 rows when checking for compatibility with merton model.  #> [1] \"Done 2 / 2 total runs\" #> [1] \"All runs completed.\"  # Print sensitivity analysis results for different result types print(sensitivity_analysis_results[\"npv\"]) #> $npv #> # A tibble: 1,555 × 9 #>    run_id          company_id asset_id company_name asset_name sector technology #>    <chr>           <chr>      <chr>    <chr>        <chr>      <chr>  <chr>      #>  1 30bb55a0-559e-… E10000000… P100000… Kobe Steel … Kobe Kako… Steel  BOF-BF     #>  2 30bb55a0-559e-… E10000000… P100000… Nippon Stee… Nippon Ea… Steel  BOF-BF     #>  3 30bb55a0-559e-… E10000000… P100000… Nippon Stee… North Nip… Steel  BOF-BF     #>  4 30bb55a0-559e-… E10000000… P100000… Nippon Stee… Nippon Ea… Steel  BOF-BF     #>  5 30bb55a0-559e-… E10000000… P100000… Nippon Stee… Nippon Ky… Steel  BOF-BF     #>  6 30bb55a0-559e-… E10000000… P100000… Nippon Stee… Nippon Ky… Steel  BOF-BF     #>  7 30bb55a0-559e-… E10000000… P100000… Nippon Stee… Nippon Ea… Steel  BOF-BF     #>  8 30bb55a0-559e-… E10000000… P100000… Nippon Stee… Nippon Ka… Steel  BOF-BF     #>  9 30bb55a0-559e-… E10000000… P100000… ArcelorMitt… ArcelorMi… Steel  BOF-BF     #> 10 30bb55a0-559e-… E10000000… P100000… ArcelorMitt… ArcelorMi… Steel  EAF-MM     #> # ℹ 1,545 more rows #> # ℹ 2 more variables: net_present_value_baseline <dbl>, #> #   net_present_value_shock <dbl> print(sensitivity_analysis_results[\"pd\"]) #> $pd #> # A tibble: 6,190 × 7 #>    run_id              company_id company_name sector  term pd_baseline pd_shock #>    <chr>               <chr>      <chr>        <chr>  <int>       <dbl>    <dbl> #>  1 30bb55a0-559e-4b44… E10000000… Kobe Steel … Steel      1    4.53e-12  0.00456 #>  2 30bb55a0-559e-4b44… E10000000… Kobe Steel … Steel      2    1.03e- 6  0.0385  #>  3 30bb55a0-559e-4b44… E10000000… Kobe Steel … Steel      3    6.81e- 5  0.0834  #>  4 30bb55a0-559e-4b44… E10000000… Kobe Steel … Steel      4    5.75e- 4  0.126   #>  5 30bb55a0-559e-4b44… E10000000… Kobe Steel … Steel      5    2.12e- 3  0.165   #>  6 30bb55a0-559e-4b44… E10000000… Nippon Stee… Steel      1    1.41e-11  0.0116  #>  7 30bb55a0-559e-4b44… E10000000… Nippon Stee… Steel      2    1.87e- 6  0.0638  #>  8 30bb55a0-559e-4b44… E10000000… Nippon Stee… Steel      3    1.03e- 4  0.119   #>  9 30bb55a0-559e-4b44… E10000000… Nippon Stee… Steel      4    7.97e- 4  0.168   #> 10 30bb55a0-559e-4b44… E10000000… Nippon Stee… Steel      5    2.78e- 3  0.209   #> # ℹ 6,180 more rows print(sensitivity_analysis_results[\"trajectories\"]) #> $trajectories #> # A tibble: 61,696 × 22 #>    run_id    asset_id asset_name company_id company_name  year sector technology #>    <chr>     <chr>    <chr>      <chr>      <chr>        <dbl> <chr>  <chr>      #>  1 30bb55a0… GASTAGO… NA         100748a83… NA            2020 Steel  EAF-BF     #>  2 30bb55a0… GASTAGO… NA         100748a83… NA            2021 Steel  EAF-BF     #>  3 30bb55a0… GASTAGO… NA         100748a83… NA            2022 Steel  EAF-BF     #>  4 30bb55a0… GASTAGO… NA         100748a83… NA            2023 Steel  EAF-BF     #>  5 30bb55a0… GASTAGO… NA         100748a83… NA            2024 Steel  EAF-BF     #>  6 30bb55a0… GASTAGO… NA         100748a83… NA            2025 Steel  EAF-BF     #>  7 30bb55a0… GASTAGO… NA         100748a83… NA            2026 Steel  EAF-BF     #>  8 30bb55a0… GASTAGO… NA         100748a83… NA            2027 Steel  EAF-BF     #>  9 30bb55a0… GASTAGO… NA         100748a83… NA            2028 Steel  EAF-BF     #> 10 30bb55a0… GASTAGO… NA         100748a83… NA            2029 Steel  EAF-BF     #> # ℹ 61,686 more rows #> # ℹ 14 more variables: production_plan_company_technology <dbl>, #> #   production_baseline_scenario <dbl>, production_target_scenario <dbl>, #> #   production_shock_scenario <dbl>, pd <dbl>, net_profit_margin <dbl>, #> #   debt_equity_ratio <dbl>, volatility <dbl>, scenario_price_baseline <dbl>, #> #   price_shock_scenario <dbl>, net_profits_baseline_scenario <dbl>, #> #   net_profits_shock_scenario <dbl>, … print(sensitivity_analysis_results[\"params\"]) #> $params #> # A tibble: 2 × 11 #>   baseline_scenario target_scenario scenario_geography carbon_price_model #>   <chr>             <chr>           <chr>              <chr>              #> 1 Steel_baseline    Steel_NZ        Global             no_carbon_tax      #> 2 Steel_baseline    Steel_NZ        Global             no_carbon_tax      #> # ℹ 7 more variables: risk_free_rate <dbl>, discount_rate <dbl>, #> #   growth_rate <dbl>, div_netprofit_prop_coef <dbl>, shock_year <dbl>, #> #   market_passthrough <dbl>, run_id <chr>"},{"path":"/articles/main-functions-demo.html","id":"sensitivity-analysis-on-filtered-subset","dir":"Articles","previous_headings":"trisk.analysis main functions demo","what":"Sensitivity Analysis on Filtered Subset","title":"main-functions-demo","text":"can also perform sensitivity analysis filtered subset assets. example filters dataset country, sector, technology, runs analysis.","code":"# Run sensitivity analysis on a subset of assets sensitivity_analysis_results_on_filtered_assets <- run_trisk_sa(   input_path = local_trisk_inputs_folder,   run_params = run_params,   country_iso2 = c(\"US\", \"AR\"),   sector = \"Steel\",   technology = c(\"EAF-DRI\", \"BOF-BF\") ) #> [1] \"Starting the execution of 2 total runs\" #> -- Processing Assets and Scenarios.  #> -- Transforming to Trisk model input.  #> -- Calculating baseline, target, and shock trajectories.  #> -- Calculating net profits.  #> -- Calculating market risk.  #> -- Calculating credit risk.  #> Removed 30 rows when checking for compatibility with merton model.  #> [1] \"Done 1 / 2 total runs\" #> -- Processing Assets and Scenarios.  #> -- Transforming to Trisk model input.  #> -- Calculating baseline, target, and shock trajectories.  #> -- Calculating net profits.  #> -- Calculating market risk.  #> -- Calculating credit risk.  #> Removed 15 rows when checking for compatibility with merton model.  #> [1] \"Done 2 / 2 total runs\" #> [1] \"All runs completed.\"  # Print sensitivity analysis results for the filtered subset print(sensitivity_analysis_results_on_filtered_assets[\"npv\"]) #> $npv #> # A tibble: 30 × 9 #>    run_id          company_id asset_id company_name asset_name sector technology #>    <chr>           <chr>      <chr>    <chr>        <chr>      <chr>  <chr>      #>  1 1101c4da-d7e8-… E10000000… P100000… ArcelorMitt… ArcelorMi… Steel  EAF-DRI    #>  2 1101c4da-d7e8-… E10000000… P100000… United Stat… U.S. Stee… Steel  BOF-BF     #>  3 1101c4da-d7e8-… E10000000… P100000… United Stat… U.S. Stee… Steel  BOF-BF     #>  4 1101c4da-d7e8-… E10000000… P100000… Siderca SAI… TenarisSi… Steel  EAF-DRI    #>  5 1101c4da-d7e8-… E10000013… P100000… Ternium Arg… Ternium S… Steel  BOF-BF     #>  6 1101c4da-d7e8-… E10000100… P100000… Cleveland-C… Cleveland… Steel  BOF-BF     #>  7 1101c4da-d7e8-… E10000100… P100000… Cleveland-C… Cleveland… Steel  BOF-BF     #>  8 1101c4da-d7e8-… E10000100… P100000… Cleveland-C… Cleveland… Steel  BOF-BF     #>  9 1101c4da-d7e8-… E10000100… P100000… Cleveland-C… Cleveland… Steel  BOF-BF     #> 10 1101c4da-d7e8-… E10000100… P100000… Cleveland-C… Cleveland… Steel  BOF-BF     #> # ℹ 20 more rows #> # ℹ 2 more variables: net_present_value_baseline <dbl>, #> #   net_present_value_shock <dbl> print(sensitivity_analysis_results_on_filtered_assets[\"pd\"]) #> $pd #> # A tibble: 65 × 7 #>    run_id              company_id company_name sector  term pd_baseline pd_shock #>    <chr>               <chr>      <chr>        <chr>  <int>       <dbl>    <dbl> #>  1 1101c4da-d7e8-4d7d… E10000000… United Stat… Steel      1    1.41e-11  0.110   #>  2 1101c4da-d7e8-4d7d… E10000000… United Stat… Steel      2    1.87e- 6  0.216   #>  3 1101c4da-d7e8-4d7d… E10000000… United Stat… Steel      3    1.03e- 4  0.282   #>  4 1101c4da-d7e8-4d7d… E10000000… United Stat… Steel      4    7.97e- 4  0.329   #>  5 1101c4da-d7e8-4d7d… E10000000… United Stat… Steel      5    2.78e- 3  0.365   #>  6 1101c4da-d7e8-4d7d… E10000000… Siderca SAI… Steel      1    3.57e-12  0.00173 #>  7 1101c4da-d7e8-4d7d… E10000000… Siderca SAI… Steel      2    9.12e- 7  0.0231  #>  8 1101c4da-d7e8-4d7d… E10000000… Siderca SAI… Steel      3    6.27e- 5  0.0587  #>  9 1101c4da-d7e8-4d7d… E10000000… Siderca SAI… Steel      4    5.41e- 4  0.0962  #> 10 1101c4da-d7e8-4d7d… E10000000… Siderca SAI… Steel      5    2.01e- 3  0.132   #> # ℹ 55 more rows print(sensitivity_analysis_results_on_filtered_assets[\"trajectories\"]) #> $trajectories #> # A tibble: 1,600 × 22 #>    run_id    asset_id asset_name company_id company_name  year sector technology #>    <chr>     <chr>    <chr>      <chr>      <chr>        <dbl> <chr>  <chr>      #>  1 1101c4da… GASTUSA… NA         d6ca6f482… NA            2020 Steel  BOF-BF     #>  2 1101c4da… GASTUSA… NA         d6ca6f482… NA            2021 Steel  BOF-BF     #>  3 1101c4da… GASTUSA… NA         d6ca6f482… NA            2022 Steel  BOF-BF     #>  4 1101c4da… GASTUSA… NA         d6ca6f482… NA            2023 Steel  BOF-BF     #>  5 1101c4da… GASTUSA… NA         d6ca6f482… NA            2024 Steel  BOF-BF     #>  6 1101c4da… GASTUSA… NA         d6ca6f482… NA            2025 Steel  BOF-BF     #>  7 1101c4da… GASTUSA… NA         d6ca6f482… NA            2026 Steel  BOF-BF     #>  8 1101c4da… GASTUSA… NA         d6ca6f482… NA            2027 Steel  BOF-BF     #>  9 1101c4da… GASTUSA… NA         d6ca6f482… NA            2028 Steel  BOF-BF     #> 10 1101c4da… GASTUSA… NA         d6ca6f482… NA            2029 Steel  BOF-BF     #> # ℹ 1,590 more rows #> # ℹ 14 more variables: production_plan_company_technology <dbl>, #> #   production_baseline_scenario <dbl>, production_target_scenario <dbl>, #> #   production_shock_scenario <dbl>, pd <dbl>, net_profit_margin <dbl>, #> #   debt_equity_ratio <dbl>, volatility <dbl>, scenario_price_baseline <dbl>, #> #   price_shock_scenario <dbl>, net_profits_baseline_scenario <dbl>, #> #   net_profits_shock_scenario <dbl>, … print(sensitivity_analysis_results_on_filtered_assets[\"params\"]) #> $params #> # A tibble: 2 × 11 #>   baseline_scenario target_scenario scenario_geography carbon_price_model #>   <chr>             <chr>           <chr>              <chr>              #> 1 Steel_baseline    Steel_NZ        Global             no_carbon_tax      #> 2 Steel_baseline    Steel_NZ        Global             no_carbon_tax      #> # ℹ 7 more variables: risk_free_rate <dbl>, discount_rate <dbl>, #> #   growth_rate <dbl>, div_netprofit_prop_coef <dbl>, shock_year <dbl>, #> #   market_passthrough <dbl>, run_id <chr>"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package maintainer. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ww (2024). trisk.analysis: Package (Title Case). R package version 0.1.0.","code":"@Manual{,   title = {trisk.analysis: What the Package Does (Title Case)},   author = {Who wrote it},   year = {2024},   note = {R package version 0.1.0}, }"},{"path":"/index.html","id":"trisk-analysis","dir":"","previous_headings":"","what":"What the Package Does (Title Case)","title":"What the Package Does (Title Case)","text":"repository contains workflow running TRISK model assess financial impacts transition towards low-carbon economy based different climate scenarios. Introduction Installation Usage Example Parameters Usage Example Parameters Usage Example Parameters Usage Example Parameters","code":""},{"path":"/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"What the Package Does (Title Case)","text":"TRISK model helps understanding financial impacts different climate scenarios specific industries sectors. workflow guides setting running TRISK model, including downloading necessary data, running basic advanced scenarios, performing sensitivity analysis.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (Title Case)","text":"get started, install required packages GitHub:","code":"devtools::install_github(\"Theia-Finance-Labs/trisk.analysis\")"},{"path":[]},{"path":"/index.html","id":"download_trisk_inputs","dir":"","previous_headings":"Main Functions","what":"download_trisk_inputs()","title":"What the Package Does (Title Case)","text":"Downloads necessary input data required running TRISK model. function downloads several CSV files (assets.csv, financial_features.csv, scenarios.csv, ngfs_carbon_price.csv) saves specified local folder.","code":""},{"path":"/index.html","id":"usage-example","dir":"","previous_headings":"Main Functions > download_trisk_inputs()","what":"Usage Example","title":"What the Package Does (Title Case)","text":"","code":"endpoint_url <- \"https://scenarios-repository.fra1.cdn.digitaloceanspaces.com\" s3_path <- \"mock_trisk_inputs\" local_trisk_inputs_folder <- file.path(\"data-raw\", \"data\", \"trisk_inputs\")  download_trisk_inputs(endpoint_url, s3_path, local_trisk_inputs_folder)"},{"path":"/index.html","id":"parameters","dir":"","previous_headings":"Main Functions > download_trisk_inputs()","what":"Parameters","title":"What the Package Does (Title Case)","text":"endpoint_url: base URL endpoint data files downloaded. s3_path: specific path within endpoint data files located. local_trisk_inputs_folder: local folder path downloaded files saved.","code":""},{"path":"/index.html","id":"run_trisk","dir":"","previous_headings":"Main Functions","what":"run_trisk()","title":"What the Package Does (Title Case)","text":"Executes basic TRISK model run specific baseline scenario target scenario. - time taken TRISK run printed. - latest results various metrics (Net Present Value (npv), Probability Default (pd), company trajectories, parameters) printed using get_latest_trisk_result() function.","code":""},{"path":"/index.html","id":"usage-example-1","dir":"","previous_headings":"Main Functions > run_trisk()","what":"Usage Example","title":"What the Package Does (Title Case)","text":"","code":"trisk_output_path <- file.path(\"data-raw\", \"data\", \"trisk_outputs\")  start_time <- Sys.time()  run_trisk(   input_path = local_trisk_inputs_folder,   output_path = trisk_output_path,   baseline_scenario = \"Steel_baseline\",   target_scenario = \"Steel_NZ\",   scenario_geography = \"Global\" )  end_time <- Sys.time() time_taken <- end_time - start_time print(time_taken)  print(get_latest_trisk_result(trisk_output_path = trisk_output_path, result_type = \"npv\")) print(get_latest_trisk_result(trisk_output_path = trisk_output_path, result_type = \"pd\")) print(get_latest_trisk_result(trisk_output_path = trisk_output_path, result_type = \"trajectories\")) print(get_latest_trisk_result(trisk_output_path = trisk_output_path, result_type = \"params\"))"},{"path":"/index.html","id":"parameters-1","dir":"","previous_headings":"Main Functions > run_trisk()","what":"Parameters","title":"What the Package Does (Title Case)","text":"input_path: path folder containing input data files required TRISK model. output_path: path model’s output files saved. baseline_scenario: baseline scenario used model run (e.g., “Steel_baseline”). target_scenario: target scenario used model run (e.g., “Steel_NZ”). scenario_geography: geographic scope scenario (e.g., “Global”).","code":""},{"path":"/index.html","id":"run_trisk_single_filtered","dir":"","previous_headings":"Main Functions","what":"run_trisk_single_filtered()","title":"What the Package Does (Title Case)","text":"Runs TRISK model filtered dataset. Returns list tibbles containing results TRISK model run: - npv: Net Present Value results. - pd: Probability Default results. - trajectories: Company trajectories. - params: Model parameters used run.","code":""},{"path":"/index.html","id":"usage-example-2","dir":"","previous_headings":"Main Functions > run_trisk_single_filtered()","what":"Usage Example","title":"What the Package Does (Title Case)","text":"","code":"single_run_params <- list(     scenario_geography = \"Global\",     baseline_scenario = \"Steel_baseline\",     target_scenario = \"Steel_NZ\",     shock_year = 2030 )  single_filtered_results <- run_trisk_single_filtered(     input_path = local_trisk_inputs_folder,      run_params = single_run_params,     country_iso2 = c(\"US\", \"AR\"),      sector = \"Steel\",      technology = c(\"EAF-DRI\", \"BOF-BF\"),      company_name = NULL )  print(single_filtered_results[\"npv\"]) print(single_filtered_results[\"pd\"]) print(single_filtered_results[\"trajectories\"]) print(single_filtered_results[\"params\"])"},{"path":"/index.html","id":"parameters-2","dir":"","previous_headings":"Main Functions > run_trisk_single_filtered()","what":"Parameters","title":"What the Package Does (Title Case)","text":"input_path: path folder containing input data files required TRISK model. run_params: list parameters required running TRISK model, including scenario_geography, baseline_scenario, target_scenario, shock_year. country_iso2: (Optional) character vector ISO2 country codes filter assets. sector: (Optional) character vector sectors filter assets. technology: (Optional) character vector technologies filter assets. company_name: (Optional) character vector company names filter assets.","code":""},{"path":"/index.html","id":"run_trisk_sa","dir":"","previous_headings":"Main Functions","what":"run_trisk_sa()","title":"What the Package Does (Title Case)","text":"Performs sensitivity analysis multiple TRISK model runs. Returns list tibbles containing combined results runs: - npv: Net Present Value results. - pd: Probability Default results. - trajectories: Company trajectories. - params: Model parameters used runs.","code":""},{"path":"/index.html","id":"usage-example-3","dir":"","previous_headings":"Main Functions > run_trisk_sa()","what":"Usage Example","title":"What the Package Does (Title Case)","text":"","code":"run_params <- list(     list(         scenario_geography = \"Global\",         baseline_scenario = \"Steel_baseline\",         target_scenario = \"Steel_NZ\",         shock_year = 2030     ),     list(         scenario_geography = \"Global\",         baseline_scenario = \"Steel_baseline\",         target_scenario = \"Steel_NZ\",         shock_year = 2025     ) )  sensitivity_analysis_results <- run_trisk_sa(     input_path = local_trisk_inputs_folder,      run_params = run_params )  sensitivity_analysis_results[\"npv\"] sensitivity_analysis_results[\"pd\"] sensitivity_analysis_results[\"trajectories\"] sensitivity_analysis_results[\"params\"]"},{"path":"/index.html","id":"parameters-3","dir":"","previous_headings":"Main Functions > run_trisk_sa()","what":"Parameters","title":"What the Package Does (Title Case)","text":"input_path: path folder containing input data files required TRISK model. run_params: list parameter sets set contains required parameters single TRISK model run (e.g., scenario_geography, baseline_scenario, target_scenario, shock_year). ...: Additional arguments filtering assets, country_iso2, sector, technology, company_name.","code":""},{"path":"/reference/download_trisk_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Download TRISK input data files from a specified endpoint — download_trisk_inputs","title":"Download TRISK input data files from a specified endpoint — download_trisk_inputs","text":"function downloads TRISK input data files specified endpoint URL saves local folder. ensures local folder exists downloading files. folder exist, created.","code":""},{"path":"/reference/download_trisk_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download TRISK input data files from a specified endpoint — download_trisk_inputs","text":"","code":"download_trisk_inputs(endpoint_url, s3_path, local_save_folder)"},{"path":"/reference/download_trisk_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download TRISK input data files from a specified endpoint — download_trisk_inputs","text":"endpoint_url base URL endpoint data files downloaded. s3_path specific path within endpoint data files located. local_save_folder local folder path downloaded files saved.","code":""},{"path":"/reference/download_trisk_inputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download TRISK input data files from a specified endpoint — download_trisk_inputs","text":"return value. function downloads files saves specified local folder.","code":""},{"path":"/reference/filter_assets.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter assets based on provided criteria — filter_assets","title":"Filter assets based on provided criteria — filter_assets","text":"function filters assets data based criteria country, sector, technology, company name.","code":""},{"path":"/reference/filter_assets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter assets based on provided criteria — filter_assets","text":"","code":"filter_assets(   assets_data,   country_iso2 = NULL,   sector = NULL,   technology = NULL,   company_name = NULL )"},{"path":"/reference/filter_assets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter assets based on provided criteria — filter_assets","text":"assets_data assets data filtered. country_iso2 character vector ISO2 country codes filter assets. Defaults NULL. sector character vector sectors filter assets. Defaults NULL. technology character vector technologies filter assets. Defaults NULL. company_name character vector company names filter assets. Defaults NULL.","code":""},{"path":"/reference/filter_assets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter assets based on provided criteria — filter_assets","text":"tibble containing filtered assets data.","code":""},{"path":"/reference/get_filtered_assets_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get filtered assets data based on provided criteria — get_filtered_assets_data","title":"Get filtered assets data based on provided criteria — get_filtered_assets_data","text":"function loads filters assets data based criteria country, sector, technology, company name.","code":""},{"path":"/reference/get_filtered_assets_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get filtered assets data based on provided criteria — get_filtered_assets_data","text":"","code":"get_filtered_assets_data(   input_path,   country_iso2 = NULL,   sector = NULL,   technology = NULL,   company_name = NULL )"},{"path":"/reference/get_filtered_assets_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get filtered assets data based on provided criteria — get_filtered_assets_data","text":"input_path path input data directory containing necessary files TRISK model. country_iso2 character vector ISO2 country codes filter assets. Defaults NULL. sector character vector sectors filter assets. Defaults NULL. technology character vector technologies filter assets. Defaults NULL. company_name character vector company names filter assets. Defaults NULL.","code":""},{"path":"/reference/get_filtered_assets_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get filtered assets data based on provided criteria — get_filtered_assets_data","text":"list containing filtered assets data input data required TRISK model.","code":""},{"path":"/reference/get_latest_timestamped_folder.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the latest timestamped folder in a directory — get_latest_timestamped_folder","title":"Get the latest timestamped folder in a directory — get_latest_timestamped_folder","text":"function finds recent folder given directory folder names follow specific timestamp format (YYYYMMDD_HHMMSS).","code":""},{"path":"/reference/get_latest_timestamped_folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the latest timestamped folder in a directory — get_latest_timestamped_folder","text":"","code":"get_latest_timestamped_folder(path)"},{"path":"/reference/get_latest_timestamped_folder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the latest timestamped folder in a directory — get_latest_timestamped_folder","text":"path directory path containing timestamped folders.","code":""},{"path":"/reference/get_latest_timestamped_folder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the latest timestamped folder in a directory — get_latest_timestamped_folder","text":"relative path recent timestamped folder. valid directories found, message returned.","code":""},{"path":"/reference/get_latest_trisk_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the latest TRISK result of a specified type — get_latest_trisk_result","title":"Get the latest TRISK result of a specified type — get_latest_trisk_result","text":"function retrieves latest TRISK result based specified result type. identifies recent output directory using timestamped folder structure, loads corresponding result file.","code":""},{"path":"/reference/get_latest_trisk_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the latest TRISK result of a specified type — get_latest_trisk_result","text":"","code":"get_latest_trisk_result(trisk_output_path, result_type)"},{"path":"/reference/get_latest_trisk_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the latest TRISK result of a specified type — get_latest_trisk_result","text":"trisk_output_path path TRISK output directory containing timestamped folders. result_type type result retrieve. Valid options \"npv\", \"pd\", \"trajectories\", \"params\".","code":""},{"path":"/reference/get_latest_trisk_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the latest TRISK result of a specified type — get_latest_trisk_result","text":"tibble containing requested TRISK result data. specified file exist, warning issued, NULL returned.","code":""},{"path":"/reference/get_single_trisk_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a specific TRISK result from a given sub-directory — get_single_trisk_result","title":"Get a specific TRISK result from a given sub-directory — get_single_trisk_result","text":"function retrieves specific TRISK result file given sub-directory based provided result type.","code":""},{"path":"/reference/get_single_trisk_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a specific TRISK result from a given sub-directory — get_single_trisk_result","text":"","code":"get_single_trisk_result(sub_dir, result_type)"},{"path":"/reference/get_single_trisk_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a specific TRISK result from a given sub-directory — get_single_trisk_result","text":"sub_dir sub-directory path containing TRISK result files. result_type type result retrieve. Valid options \"trajectories\", \"pd\", \"npv\", \"params\".","code":""},{"path":"/reference/get_single_trisk_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a specific TRISK result from a given sub-directory — get_single_trisk_result","text":"tibble containing requested TRISK result data. file exist, warning issued, NULL returned.","code":""},{"path":"/reference/run_trisk_sa.html","id":null,"dir":"Reference","previous_headings":"","what":"Run TRISK sensitivity analysis on multiple scenarios — run_trisk_sa","title":"Run TRISK sensitivity analysis on multiple scenarios — run_trisk_sa","text":"function performs sensitivity analysis running TRISK model multiple scenarios. takes list parameter sets runs TRISK model set, returning comprehensive set results includes net present value (NPV), probability default (PD), company trajectories, model parameters.","code":""},{"path":"/reference/run_trisk_sa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run TRISK sensitivity analysis on multiple scenarios — run_trisk_sa","text":"","code":"run_trisk_sa(input_path, run_params, ...)"},{"path":"/reference/run_trisk_sa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run TRISK sensitivity analysis on multiple scenarios — run_trisk_sa","text":"input_path path input data directory containing necessary files TRISK model. run_params list parameter sets set contains required parameters single TRISK model run. parameter set must include `scenario_geography`, `baseline_scenario`, `target_scenario`, `shock_year`. ... Additional arguments passed `get_filtered_assets_data`, `country_iso2`, `sector`, `technology`, `company_name` filtering assets.","code":""},{"path":"/reference/run_trisk_sa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run TRISK sensitivity analysis on multiple scenarios — run_trisk_sa","text":"list tibbles containing combined results runs. list includes tibbles NPV results (`npv`),         PD results (`pd`), company trajectories (`trajectories`), model parameters (`params`).","code":""},{"path":"/reference/run_trisk_single_filtered.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a single filtered TRISK model scenario — run_trisk_single_filtered","title":"Run a single filtered TRISK model scenario — run_trisk_single_filtered","text":"function runs TRISK model single set parameters, ability filter assets based country, sector, technology, company name. function returns set results including net present value (NPV), probability default (PD), company trajectories, model parameters.","code":""},{"path":"/reference/run_trisk_single_filtered.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a single filtered TRISK model scenario — run_trisk_single_filtered","text":"","code":"run_trisk_single_filtered(   input_path,   run_params,   country_iso2 = NULL,   sector = NULL,   technology = NULL,   company_name = NULL )"},{"path":"/reference/run_trisk_single_filtered.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a single filtered TRISK model scenario — run_trisk_single_filtered","text":"input_path path input data directory containing necessary files TRISK model. run_params list parameters required running TRISK model, including `scenario_geography`, `baseline_scenario`, `target_scenario`, `shock_year`. country_iso2 character vector ISO2 country codes filter assets. Defaults NULL. sector character vector sectors filter assets. Defaults NULL. technology character vector technologies filter assets. Defaults NULL. company_name character vector company names filter assets. Defaults NULL.","code":""},{"path":"/reference/run_trisk_single_filtered.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a single filtered TRISK model scenario — run_trisk_single_filtered","text":"list tibbles containing results TRISK model run. list includes tibbles NPV results (`npv`),         PD results (`pd`), company trajectories (`trajectories`), model parameters (`params`).","code":""}]
